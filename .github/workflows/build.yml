name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync
    
    - name: Install package in development mode
      run: uv pip install -e .
    
    - name: Run unit tests
      run: uv run pytest tests/ -v
    
    - name: Test CLI basic commands
      run: |
        uv run excludarr --help
        uv run excludarr --version
        uv run excludarr providers list --popular
    
    - name: Create test configuration
      run: |
        cat > test.yml << EOF
        sonarr:
          url: "http://localhost:8989"
          api_key: "test_key_12345678901234567890123456789012"
        
        provider_apis:
          tmdb:
            api_key: "test_tmdb_key"
            enabled: true
        
        streaming_providers:
          - name: "netflix"
            country: "US"
        
        sync:
          action: "unmonitor"
          dry_run: true
          exclude_recent_days: 7
        EOF
    
    - name: Test configuration validation
      run: uv run excludarr --config test.yml config validate || echo "Expected to fail in test environment"
    
    - name: Test provider info commands
      run: |
        uv run excludarr providers info netflix || true
        uv run excludarr providers validate netflix US
        uv run excludarr providers stats
    
    - name: Run tests with coverage
      run: uv run pytest --cov=excludarr --cov-report=term-missing
    
    - name: Test package can be built
      run: uv build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.12'
      with:
        name: excludarr-package
        path: dist/
        retention-days: 7